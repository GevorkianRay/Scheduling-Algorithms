import java.util.LinkedList;
import java.util.Queue;
import java.util.Random;

public class Tester extends Thread {
    static int[][] grid = new int[10][10];
    public String seller1 = "s1";
    public String seller2 = "s2";
    public String seller3 = "s3";
    public Queue<Integer> customerQ = new LinkedList<Integer>();

    public static synchronized void populateGrid()
    {
        Thread t1 = new Thread(new Runnable(){
            public  void run() {
                for(int i = 0; i < grid.length; i++)
                {
                    for(int j = 0; j < grid[i].length; j++)
                    {
                        if(grid[i][j] == 0 )
                        {
                            grid[i][j] = 1;
                            printGrid();
                        }
                        else
                        {
                            continue;
                        }
                    }
                }
            }
        });

        Thread t2 = new Thread(new Runnable() {
            public  void run() {
                for(int i = 0; i < grid.length; i++)
                {
                    for(int j = 0; j < grid[i].length; j++)
                    {
                        if(grid[i][j] == 0 )
                        {
                            grid[i][j] = 2;
                            printGrid();
                        }
                        else
                        {
                            continue;
                        }
                    }
                }
            }
        });

        Thread t3 = new Thread(new Runnable() {
            public   void run() {
                for(int i = 0; i < grid.length; i++)
                {
                    for(int j = 0; j < grid[i].length; j++)
                    {
                        if(grid[i][j] == 0 )
                        {
                            grid[i][j] = 3;
                            printGrid();
                        }
                        else
                        {
                            continue;
                        }
                    }

                }
            }
        });

        t1.start();
        t2.start();
        t3.start();

    }

    public static void main(String[] args)
    {
        printGrid();
        populateGrid();
    }

    public static int generateTime()
    {
        return new Random().nextInt(3) + 2;
    }

    public static synchronized void printGrid()
    {
        int count =0;
        for(int i=0; i < grid.length; i++)
        {
            for(int j=0; j < grid[i].length; j++)
            {

                if(count == 9)
                {
                    System.out.print(grid[i][j] +"\t");
                    System.out.println();
                    count=0;
                }
                else
                {
                    System.out.print(grid[i][j] +"\t");
                    count++;
                }

            }
        }
    }
}
